{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileDataFormReduxForm","profile","error","s","formSummaryError","createField","Input","type","Object","keys","contacts","key","styles","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photos","large","userPhoto","alt","mainPhoto","target","files","length","initialValues","formData","then","Profile","ProfileContainer","userID","this","match","params","authorisedUserID","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.76b08b31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1Fgjo\",\"contacts\":\"ProfileInfo_contacts__3y62P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from \"react\";\nimport style from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={style.item}>\n      <img src=\"https://oper.ru/static/data/gallery/l1048753984.jpg\" />\n      {props.message}\n      <div>\n      <span>like</span> {props.likesCount}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\nimport style from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name={\"newPostText\"}\n          component={Textarea}\n          placeholder={\"Post message\"}\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\n  AddNewPostForm\n);\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((p) => (\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\n  ));\n\n  let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={style.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={style.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport {\n  createField,\n  Input,\n  Textarea,\n} from \"../../Common/FormsControls/FormsControls\";\nimport styles from \"./ProfileInfo.module.css\";\nimport s from \"../../Common/FormsControls/FormsControls.module.css\";\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <button>Save</button>\n      </div>\n      {error && <div className={s.formSummaryError}>{error}</div>}\n      <div>\n        <b>Full name</b>: {createField(\"Full Name\", \"fullName\", [], Input)}\n      </div>\n      <div>\n        <b>Looking for a job</b>:\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\n      </div>\n      <div>\n        <b>My professional skills</b>:\n        {createField(\n          \"My professional skills\",\n          \"lookingForAJobDescription\",\n          [],\n          Textarea\n        )}\n      </div>\n      <div>\n        <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Input)}\n      </div>\n      <div>\n        <b>Contacts </b>:\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key} className={styles.contacts}>\n              <b>\n                {key}: {createField(key, \"contacts.\" + key, [], Input)}\n              </b>\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\n  ProfileDataForm\n);\n\nexport default ProfileDataFormReduxForm;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <b>Status</b>:\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"No status\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            value={status}\n            autoFocus={true}\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React, { useState } from \"react\";\nimport userPhoto from \"../../../assets/images/user.jpg\";\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport styles from \"./ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={styles.contacts}>\n      <b>{contactTitle}</b>:{contactValue}\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode}>Edit</button>\n        </div>\n      )}\n      <div>\n        <b>Full name</b>:{profile.fullName}\n      </div>\n      <div>\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"No\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div>\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div>\n        <b>About me</b>: {profile.aboutMe}\n      </div>\n      <div>\n        <b>Contacts </b>:\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(\n        () => {\n            setEditMode(false);\n        }\n    );\n}\n\n  return (\n    <div>\n      <div className={styles.descriptionBlock}>\n        <img\n          src={profile.photos.large || userPhoto}\n          alt=\"ava\"\n          className={styles.mainPhoto}\n        />\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\n\n        {editMode ? (\n          <ProfileDataForm\n            initialValues={profile}\n            profile={profile}\n            onSubmit={onSubmit}\n          />\n        ) : (\n          <ProfileData\n            goToEditMode={() => {\n              setEditMode(true);\n            }}\n            profile={profile}\n            isOwner={isOwner}\n          />\n        )}\n\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\n// import style from \"./Profile.module.css\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n  savePhoto,\n  saveProfile,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userID = this.props.match.params.userID;\n\n    if (!userID) {\n      userID = this.props.authorisedUserID;\n      if (!userID) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userID);\n    this.props.getStatus(userID);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userID !== prevProps.match.params.userID) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userID}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserID: state.auth.userID,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n  }),\n  withRouter\n  //withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}