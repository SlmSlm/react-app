{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","alt","Preloader","Profile","ProfileContainer","userID","this","match","params","authorisedUserID","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a0732a57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","import React from \"react\";\nimport style from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={style.item}>\n      <img src=\"https://oper.ru/static/data/gallery/l1048753984.jpg\" />\n      {props.message}\n      <div>\n      <span>like</span> {props.likesCount}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\nimport style from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name={\"newPostText\"}\n          component={Textarea}\n          placeholder={\"Post message\"}\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\n  AddNewPostForm\n);\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((p) => (\n    <Post message={p.message} likesCount={p.likesCount} />\n  ));\n\n  let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={style.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={style.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"No status\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            value={status}\n            autoFocus={true}\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport style from \"./ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div className={style.descriptionBlock}>\n        <img src={profile.photos.large} alt=\"ava\" />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\n// import style from \"./Profile.module.css\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userID = this.props.match.params.userID;\n\n    if (!userID) {\n      userID = this.props.authorisedUserID;\n      if (!userID) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userID);\n    this.props.getStatus(userID);\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserID: state.auth.userID,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter\n  //withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}